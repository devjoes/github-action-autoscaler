
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: scaledactionrunners.runner.devjoes.com
spec:
  group: runner.devjoes.com
  names:
    kind: ScaledActionRunner
    listKind: ScaledActionRunnerList
    plural: scaledactionrunners
    singular: scaledactionrunner
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScaledActionRunner is the Schema for the scaledactionrunners
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScaledActionRunnerSpec defines the desired state of ScaledActionRunner
            properties:
              githubTokenSecret:
                type: string
              maxRunners:
                description: Foo is an example field of ScaledActionRunner. Edit ScaledActionRunner_types.go
                  to remove/update
                format: int32
                type: integer
              minRunners:
                format: int32
                type: integer
              owner:
                type: string
              repo:
                type: string
              runner:
                properties:
                  image:
                    type: string
                  labels:
                    type: string
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    type: object
                  workVolumeClaimTemplate:
                    description: PersistentVolumeClaimSpec describes the common attributes
                      of storage devices and allows a Source for provider-specific
                      attributes
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) * An existing
                          custom resource that implements data population (Alpha)
                          In order to use custom resource types that implement data
                          population, the AnyVolumeDataSource feature gate must be
                          enabled. If the provisioner or an external controller can
                          support the specified data source, it will create a new
                          volume based on the contents of the specified data source.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                type: object
              runnerSecrets:
                items:
                  type: string
                type: array
              scaleFactor:
                type: string
              scaling:
                properties:
                  behavior:
                    description: HorizontalPodAutoscalerBehavior configures the scaling
                      behavior of the target in both Up and Down directions (scaleUp
                      and scaleDown fields respectively).
                    properties:
                      scaleDown:
                        description: scaleDown is scaling policy for scaling Down.
                          If not set, the default value is to allow to scale down
                          to minReplicas pods, with a 300 second stabilization window
                          (i.e., the highest recommendation for the last 300sec is
                          used).
                        properties:
                          policies:
                            description: policies is a list of potential scaling polices
                              which can be used during scaling. At least one policy
                              must be specified, otherwise the HPAScalingRules will
                              be discarded as invalid
                            items:
                              description: HPAScalingPolicy is a single policy which
                                must hold true for a specified past interval.
                              properties:
                                periodSeconds:
                                  description: PeriodSeconds specifies the window
                                    of time for which the policy should hold true.
                                    PeriodSeconds must be greater than zero and less
                                    than or equal to 1800 (30 min).
                                  format: int32
                                  type: integer
                                type:
                                  description: Type is used to specify the scaling
                                    policy.
                                  type: string
                                value:
                                  description: Value contains the amount of change
                                    which is permitted by the policy. It must be greater
                                    than zero
                                  format: int32
                                  type: integer
                              required:
                              - periodSeconds
                              - type
                              - value
                              type: object
                            type: array
                          selectPolicy:
                            description: selectPolicy is used to specify which policy
                              should be used. If not set, the default value MaxPolicySelect
                              is used.
                            type: string
                          stabilizationWindowSeconds:
                            description: 'StabilizationWindowSeconds is the number
                              of seconds for which past recommendations should be
                              considered while scaling up or scaling down. StabilizationWindowSeconds
                              must be greater than or equal to zero and less than
                              or equal to 3600 (one hour). If not set, use the default
                              values: - For scale up: 0 (i.e. no stabilization is
                              done). - For scale down: 300 (i.e. the stabilization
                              window is 300 seconds long).'
                            format: int32
                            type: integer
                        type: object
                      scaleUp:
                        description: 'scaleUp is scaling policy for scaling Up. If
                          not set, the default value is the higher of:   * increase
                          no more than 4 pods per 60 seconds   * double the number
                          of pods per 60 seconds No stabilization is used.'
                        properties:
                          policies:
                            description: policies is a list of potential scaling polices
                              which can be used during scaling. At least one policy
                              must be specified, otherwise the HPAScalingRules will
                              be discarded as invalid
                            items:
                              description: HPAScalingPolicy is a single policy which
                                must hold true for a specified past interval.
                              properties:
                                periodSeconds:
                                  description: PeriodSeconds specifies the window
                                    of time for which the policy should hold true.
                                    PeriodSeconds must be greater than zero and less
                                    than or equal to 1800 (30 min).
                                  format: int32
                                  type: integer
                                type:
                                  description: Type is used to specify the scaling
                                    policy.
                                  type: string
                                value:
                                  description: Value contains the amount of change
                                    which is permitted by the policy. It must be greater
                                    than zero
                                  format: int32
                                  type: integer
                              required:
                              - periodSeconds
                              - type
                              - value
                              type: object
                            type: array
                          selectPolicy:
                            description: selectPolicy is used to specify which policy
                              should be used. If not set, the default value MaxPolicySelect
                              is used.
                            type: string
                          stabilizationWindowSeconds:
                            description: 'StabilizationWindowSeconds is the number
                              of seconds for which past recommendations should be
                              considered while scaling up or scaling down. StabilizationWindowSeconds
                              must be greater than or equal to zero and less than
                              or equal to 3600 (one hour). If not set, use the default
                              values: - For scale up: 0 (i.e. no stabilization is
                              done). - For scale down: 300 (i.e. the stabilization
                              window is 300 seconds long).'
                            format: int32
                            type: integer
                        type: object
                    type: object
                  cooldownPeriod:
                    format: int32
                    type: integer
                  pollingInterval:
                    format: int32
                    type: integer
                type: object
              selector:
                type: string
            required:
            - githubTokenSecret
            - maxRunners
            - owner
            - repo
            - runnerSecrets
            type: object
          status:
            description: ScaledActionRunnerStatus defines the observed state of ScaledActionRunner
            properties:
              referencedSecrets:
                additionalProperties:
                  type: string
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
