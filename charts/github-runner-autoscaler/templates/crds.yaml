apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: scaledactionrunnercore.runner.devjoes.com
spec:
  group: runner.devjoes.com
  names:
    kind: ScaledActionRunnerCore
    listKind: ScaledActionRunnerCoreList
    plural: scaledactionrunnercore
    singular: scaledactionrunnercore
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ScaledActionRunnerCore is the Schema for the scaledactionrunnercore API
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: ScaledActionRunnerCoreSpec defines the desired state of ScaledActionRunnerCore
              properties:
                apiServerExtraArgs:
                  items:
                    type: string
                  type: array
                apiServerImage:
                  type: string
                apiServerName:
                  type: string
                apiServerNamespace:
                  description: Foo is an example field of ScaledActionRunnerCore. Edit ScaledActionRunnerCore_types.go to remove/update
                  type: string
                apiServerReplicas:
                  format: int32
                  type: integer
                cacheWindow:
                  description: A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
                  format: int64
                  type: integer
                cacheWindowWhenEmpty:
                  description: A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
                  format: int64
                  type: integer
                createApiServer:
                  type: boolean
                createAuthentication:
                  type: boolean
                createMemcached:
                  type: boolean
                kedaNamespace:
                  type: string
                memcacheCredsSecret:
                  type: string
                memcacheServers:
                  type: string
                memcacheUser:
                  type: string
                memcachedAuth:
                  type: boolean
                memcachedImage:
                  type: string
                memcachedReplicas:
                  format: int32
                  type: integer
                namespaces:
                  items:
                    type: string
                  type: array
                prometheusNamespace:
                  type: string
                resyncInterval:
                  description: A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
                  format: int64
                  type: integer
                sslCertSecret:
                  type: string
              required:
                - apiServerName
                - apiServerNamespace
                - sslCertSecret
              type: object
            status:
              description: ScaledActionRunnerCoreStatus defines the observed state of ScaledActionRunnerCore
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: scaledactionrunners.runner.devjoes.com
spec:
  group: runner.devjoes.com
  names:
    kind: ScaledActionRunner
    listKind: ScaledActionRunnerList
    plural: scaledactionrunners
    singular: scaledactionrunner
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ScaledActionRunner is the Schema for the scaledactionrunners API
          properties:
            apiVersion:
              description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: ScaledActionRunnerSpec defines the desired state of ScaledActionRunner
              properties:
                githubTokenSecret:
                  type: string
                maxRunners:
                  description: Foo is an example field of ScaledActionRunner. Edit ScaledActionRunner_types.go to remove/update
                  format: int32
                  type: integer
                metricsSelector:
                  type: string
                minRunners:
                  format: int32
                  type: integer
                owner:
                  type: string
                repo:
                  type: string
                runner:
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    image:
                      type: string
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    mountDockerSock:
                      type: boolean
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      type: object
                    runnerLabels:
                      type: string
                    serviceAccountName:
                      type: string
                    tolerations:
                      items:
                        description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                        properties:
                          effect:
                            description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                            type: string
                          operator:
                            description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                            type: string
                          tolerationSeconds:
                            description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                            format: int64
                            type: integer
                          value:
                            description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                            type: string
                        type: object
                      type: array
                    workVolumeClaimTemplate:
                      description: PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
                      properties:
                        accessModes:
                          description: "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source."
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        resources:
                          description: "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                          type: string
                      type: object
                  type: object
                runnerSecrets:
                  items:
                    type: string
                  type: array
                scaleFactor:
                  type: string
                scaling:
                  properties:
                    behavior:
                      description: HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
                      properties:
                        scaleDown:
                          description: scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).
                          properties:
                            policies:
                              description: policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                              items:
                                description: HPAScalingPolicy is a single policy which must hold true for a specified past interval.
                                properties:
                                  periodSeconds:
                                    description: PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                    format: int32
                                    type: integer
                                  type:
                                    description: Type is used to specify the scaling policy.
                                    type: string
                                  value:
                                    description: Value contains the amount of change which is permitted by the policy. It must be greater than zero
                                    format: int32
                                    type: integer
                                required:
                                  - periodSeconds
                                  - type
                                  - value
                                type: object
                              type: array
                            selectPolicy:
                              description: selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.
                              type: string
                            stabilizationWindowSeconds:
                              description: "StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long)."
                              format: int32
                              type: integer
                          type: object
                        scaleUp:
                          description: "scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:   * increase no more than 4 pods per 60 seconds   * double the number of pods per 60 seconds No stabilization is used."
                          properties:
                            policies:
                              description: policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                              items:
                                description: HPAScalingPolicy is a single policy which must hold true for a specified past interval.
                                properties:
                                  periodSeconds:
                                    description: PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                    format: int32
                                    type: integer
                                  type:
                                    description: Type is used to specify the scaling policy.
                                    type: string
                                  value:
                                    description: Value contains the amount of change which is permitted by the policy. It must be greater than zero
                                    format: int32
                                    type: integer
                                required:
                                  - periodSeconds
                                  - type
                                  - value
                                type: object
                              type: array
                            selectPolicy:
                              description: selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.
                              type: string
                            stabilizationWindowSeconds:
                              description: "StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long)."
                              format: int32
                              type: integer
                          type: object
                      type: object
                    cooldownPeriod:
                      format: int32
                      type: integer
                    pollingInterval:
                      format: int32
                      type: integer
                  type: object
              required:
                - githubTokenSecret
                - maxRunners
                - owner
                - repo
                - runnerSecrets
              type: object
            status:
              description: ScaledActionRunnerStatus defines the observed state of ScaledActionRunner
              properties:
                referencedSecrets:
                  additionalProperties:
                    type: string
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
